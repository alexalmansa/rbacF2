#!/bin/bash


#FUNCIONS

function llegeixDirConfig()
{
    if [ ! -f "/configuracio" ]        #si no esta configuracio, entorn no existeix i cal crearlo
    then
        echo "Fitxer de configuraci√≥ base inexistent"
    fi

    i=0
    while read -r line; do
        case "$i" in
            0)
                CONFIG="$line"
                ;;

            1)
                PORTroot="$line"
                ;;
            
            2)
                
                PORTmail="$line"
                ;;
            3)
                MAIL="$line"
                ;;
            4)  
                DIRENTORN="$line"
                ;;
            5)
                FACILITY="$line"
                ;;

            *)
                ;;
        esac
        i=$((i+1))
    done < "/configuracio"
}

function llegeixConfig()
{
  if [ -f "/$rol" ]       #si no esta configuracio, entorn no existeix i cal crearlo
    then

        i=0
        while read -r line; do
            case "$i" in
                0)
                    IFS=',' read -r -a arrayProgrames <<< "$line"
                    ;;
                1)
                    direccioBashrc="$line"
                    ;;
                2)
                    tempsEntorn="$line"
                    ;;
                3)
                    tempsHome="$line"
                    ;;
                4)
                    publishPorts="$line"
                    ;;
                5)
                    exposedPorts="$line"
                    ;;
                6)
                    bridged="$line"
                    ;;
                7)
                    cpu="$line"
                    ;;
                8)
                    cpuShares="$line"
                    ;;
                9)
                    memFisica="$line"
                    ;;
                10)
                    memSwap="$line"
                    ;;

                *)
                    ;;
            esac
            i=$((i+1))

        done < "/$rol"
    else

        echo "$CONFIG/$rol"
        echo "Error, no existeix el fitxer configuracio del rol: $conf"
        exit
    fi
}

function confirma {
	read -p "Are you sure? (Y/N)? " option
	case "$option" in
		y|Y ) 
			
			;;
		n|N ) 
			
			exit
			;;
		* ) 
			echo "gestioEntorn: $option is not an option"
			exit
			;;
	esac
}

function confirmaUser {
	read -p "Username? After typing your username you will be loged out!" username
	if [ "$username" != "$user" ];
	then
		echo "gestioEntorn: invalid confirmation."
		exit
	else
		#borra entorn i home i torna a crear entorn nomes?
		echo "Deleting user, enviroment, and home..."

	fi	

}

function clean {
	function="userhome"
	echo "Your home and enviroment will be deleted, and your session will close!"
	confirma
	confirmaUser

	bash /home/$user/.envia.sh clean
}

function reset {
	echo "Your enviroment will be reseted. It will take about 10s."
	confirma

	bash /home/$user/.envia.sh reset "$rol"
}

function list {
	llegeixConfig
}

function requestCommnad {

	echo "What is your request?"
	read line
	echo -e "Subject: Request from $user \n\n $line" |netcat localhost $PORTmail -w0
	echo "Request from $user \n\n $line" >> /var/log/rbac/request.log
	logger -f /var/log/rbac/request.log -p "$FACILITY"
}

function help {
	echo "Usage: gestioEntorn [COMMAND]"
	echo -e "Manage enviroment.\n"
	echo "-c, --clean-all				remove enviroment and home"
	echo "-r, --reset				remove and reload enviroment"
	echo "-l, --list-commands			show available commands "
	echo "-h, --help				show help"
	echo "--request-command	requestCommand new function, insert text after execution of command"
}	



#CONSTANTS

user="$(whoami)"
grups="$(groups)"
array=( $grups )
rol="${array[1]}"



#SCRIPT

if [ $# -lt 1 ]
then
	echo "Missing operand. Try: 'gestioEntorn --help' for more information."
fi

case "$1" in

	"-c" | "--clean-all")
		clean
		;;
	"-r" | "--reset")
		reset
		;;
	"-h" | "--help")	
		help
		;;
	"-l" | "--list-commands")
		list
		;;
	"--request-command")
		llegeixDirConfig
		requestCommnad
		;;
	*)
		echo "gestioEntorn: invalid command."
		echo "Try: 'gestioEntorn --help' for more information."
esac
