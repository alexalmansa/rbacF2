#!/bin/bash

#Cal fer users a un disc apart i canviar path



#FUNCIONS

#cal modificar segons el usuari, posar la teva clau ssh
function creaSSH()
{
    cat <<EOT >> /data/users/config/ssh/$user/authorized_keys
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSVBbuiFnNig/DOY5hbV+XjDAaSwEv/+JXpWK/CyyjRrYmLbUG1SzYqoqs5GnX2QBUf1zVBrCvnFcos37uAHXQpeTXnnMi1wzREO7mW6XTRt4TY3rusPwuQkcD3+RT14Xm5f9Nw1wY0fDAy5wBAoCe8ir4VUkWWBkaeQ4Mb0Wh2ecspwgg5I4nY24qJIhX01DqEvzP1LQY8/lKn57HUmzFLpRQipfNDcx/4krGdgIeDdwJv8vOK03o8razVMKs11Af+lhcHsBWwDSFgo1owfsvdMLQX9THy9XqpgvQXC7rAr9C/99eXcBPizAKIpnxytjiU3pIAV/ZTTsT7v3RHnq5 alexalmansa@alex.local

EOT
}


function llegeixConfig()
{
    i=0
    while read -r line; do
        case "$i" in
            0)
                IFS=',' read -r -a arrayProgrames <<< "$line"
                ;;
            1)
                direccioBashrc="$line"
                ;;
            2)
                tempsEntorn="$line"
                ;;
            3)
                tempsHome="$line"
                ;;
            *)

                ;;
        esac
        i=$((i+1))

    done < "$CONFIG/$rol"
}


function afegeixConfig()
{
        cat <<EOT >> /etc/ssh/sshd_config

Match group $rol
        ChrootDirectory /data/users/$rol/%u/
        PubkeyAuthentication yes
        AuthenticationMethods publickey,keyboard-interactive
EOT
        systemctl restart ssh
}


function checkGroup()
{

        if grep -q $rol /etc/group
        then
                echo "Rol existent..."
        else
                echo "Rol NO existent..."

                if [ -f "/data/users/config/$rol" ]
                then
                        echo "Vols crear aquest rol? Respon amb 'y' o 'n'"
                        read resposta

                        case "$resposta" in
                                y|Y)
                                        groupadd "$rol"
                                        afegeixConfig
                                        ;;

                                n|N)
                                        exit 1
                                        ;;

                                *)
                                        echo "La resposta no es possible, respon amb 'y' o 'n'"

                        esac
                else
                        exit 1
                fi

        fi

}


function creaUser()
{
        #Miro si ja existeix usuari
        if getent passwd $user > /dev/null 2>&1; then
                echo "User already exists!"
        else

                useradd -G $rol $user -d /home/$user -s /bin/bash1
                usermod -a -G docker $user
                #Creo fitxers necessaris per ssh
                mkdir -p /data/users/config/ssh/$user/
                chown $user /data/users/config/ssh/$user
                touch /data/users/config/ssh/$user/authorized_keys

                #Creo fitxers necessaris per googleauth
                mkdir -p /data/users/config/googleauth/$user


                #Careo direcotri de la jail
                mkdir -p $JAIL


                runuser -l $user -s /bin/sh -c "ssh-keygen -t rsa -b 2048 -f /data/users/config/ssh/$user/$user-key -N ''"


                google-authenticator -s /data/users/config/googleauth/$user/.google_authenticator -t -q -d -f -u -w 3


                cat /data/users/config/ssh/$user/$user-key.pub >> /data/users/config/ssh/$user/authorized_keys


                #Posem fitxer de configuraciÃ³ del rol determinat
                cp $CONFIG/$rol $JAIL/


        fi

}


function remove()
{
    JAIL=/data/users/$rol/$user
        case $function in
                userenviroment)
                        echo "Deleting enviroment..."

                        cd $JAIL
                        umount $JAIL/proc
                        find . -maxdepth 1 ! -iname "$rol" ! -iname home -exec rm -rf {} \;
                        echo "User deleted"

                        ;;

                userhome)
                        echo "Deleting home..."

                        who | grep "$user"
                        funciona=$?
                        if [ $funciona -eq 1 ]; then
                                rm -rf $JAIL/home/$user
                                echo "User deleted"
                        else
                                echo "User is logged in. After he logs out, user will be deleted."
                                echo "bash /home/$user/.envia.sh borraHomeCon" >> "$JAIL/home/$user/.bash_logout"
                        fi
                        ;;

                *)
                        echo "Deleting user..."
                        userdel $user
                        funciona=$?
                        if [ $funciona -eq 0 ]; then
                                umount $JAIL/proc
                                rm -rf $JAIL/
                                echo "User deleted"
                        else
                                echo "User is logged in."
                        fi
                        ;;

        esac
}
function update()
{
        userc=$user
	nom=$rol
#Fer que crei enviroments? + tornar a crear totes les imatges docker
        case "$userc" in
        "-m" | "--medium")
                user="mediumImage"
                rol="medium"
                creaUser
		cd /home/"$nom"/rbac-0.2/rbacb/rbac_dir
		bash removeEnviroment mediumImage
                bash enviroment mediumImage
                cd /data/users/medium/mediumImage
                sudo tar -c . | sudo docker import - medium
		;;
		esac
		echo "Update"
}

function help {
        echo "Usage: rbac [COMMAND]"
        echo "Add and remove users.\n"
        echo "-a, --add                 add user. Must specify user type. Ex: rbac -a foo visitor"
        echo "-r, --remove                      remove user, home and enviroment. If added userhome, only home will be deleted to Ex: rbac -r foo visitor userhome. If userenviroment added, only enviroment will be deleted."
        echo "-u, --update                      update all the dockerimages ex: rbac -u -medium name"
        echo "-h, --help                        help info"
}



#CONSTANTS


function=$1
user=$2
rol=$3
deleteTipus=$4
direccioBashrc=0

JAIL=/data/users/$rol/$user
JAIL_BIN=$JAIL/bin/
CONFIG=/data/users/config



#SCRIPT

if [ $# -lt 1 ]
then
        echo "Missing operand. Try: 'rbac --help' for more information."
fi

case "$function" in

        "-a" | "--add")
                checkGroup
                llegeixConfig
                creaUser
                creaSSH
                logger -f /var/log/user.log -p user.info "ADD - User: $user added to group $rol"
                ;;
        "-r" | "--remove")
                remove $deleteTipus
                echo "RM - User: $user removed to group $rol" >> /var/log/user.log
                logger -f /var/log/user.log -p user.info 
                ;;
        "-h" | "--help")
                help
                ;;
        "-u" |"--update")
                update
                echo "UPDATE: Docker images updated" >> /var/log/docker.log
                logger -f /var/log/docker.log -p user.info 
                ;;
        *)
                echo "rbac: invalid command."
                echo "Try: 'rbac --help' for more information."

esac
